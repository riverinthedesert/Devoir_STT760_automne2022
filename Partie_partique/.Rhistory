val3 = c("<25","[25:50]","[50:65]","[>65]")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(80,15,5,50,20,30,20,30,50,5,15,80),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(5,95,60,40,95,5),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_Fiab <- cptable(~Fiab|HistP:Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
cp_Solv <- cptable(~Solv|RDR:Fiab:RevF,values = c(0,1),levels=val2)
#cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
#cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(0,1),levels=val2)
cp_Rev
cp_Age
cp_RDR
cp_HistP
cp_Actif
cp_RevF
cp_Fiab
cp_Solv
#ancient : net_list = compileCPT(list(cp_Rev,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
grain_bank = grain(net_list)
plot(grain_bank$dag)
#1
querygrain(grain_bank, nodes=c("Fiab","HistP"), type="conditional")
#2
querygrain(grain_bank, nodes=c("Fiab","Age"), type="conditional")
#3
querygrain(grain_bank, nodes=c("RDR","Age"), type="conditional")
#4
querygrain(grain_bank, nodes=c("HistP","RDR"), type="conditional")
#5
querygrain(grain_bank, nodes=c("Actif","Rev"), type="conditional")
#6
querygrain(grain_bank, nodes=c("RevF","Actif"), type="conditional")
#7
querygrain(grain_bank, nodes=c("Solv","Fiab"), type="conditional")
#8
querygrain(grain_bank, nodes=c("Solv","RevF"), type="conditional")
#1
querygrain(grain_bank, nodes=c("Fiab","HistP"), type="conditional")
#2
querygrain(grain_bank, nodes=c("Fiab","Age"), type="conditional")
#3
querygrain(grain_bank, nodes=c("RDR","Age"), type="conditional")
#4
querygrain(grain_bank, nodes=c("HistP","RDR"), type="conditional")
#5
querygrain(grain_bank, nodes=c("Actif","Rev"), type="conditional")
#6
querygrain(grain_bank, nodes=c("RevF","Actif"), type="conditional")
#7
querygrain(grain_bank, nodes=c("Solv","Fiab"), type="conditional")
#8
querygrain(grain_bank, nodes=c("Solv","RevF"), type="conditional")
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
data(marks)
names(marks)
dag_notes = empty.graph(names(marks))
arcs(dag_notes) = matrix(
c("VECT", "MECH",
"ALG", "MECH",
"ALG", "VECT",
"ANL", "ALG",
"STAT", "ALG",
"STAT", "ANL"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
mat_ad = matrix(c(0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 1, 0, 0, 0, 0, 0), nrow = 5,
dimnames = list(names(marks), names(marks)))
dag2_notes = empty.graph(names(marks))
amat(dag2_notes) = mat_ad
dag2 = drop.arc(dag_notes, from = "STAT", to = "ANL")
v_st = list(arcs = vstructs(dag2, arcs = TRUE), lwd = 4, col = "black")
graphviz.plot(dag2, highlight = v_st, layout = "fdp", main = "Interdépendances des sujets")
name_Crit <- c("Age","Fiab","HistP","RDR","Solv","RevF","Rev","Actif")
dag_bank = empty.graph(name_Crit)
arcs(dag_bank) = matrix(
c("Age", "Fiab",
"Age", "RDR",
"RDR", "HistP",
"RDR", "Solv",
"HistP", "Fiab",
"Fiab", "Solv",
"Rev", "Actif",
"Actif", "RevF",
"RevF", "Solv"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
graphviz.plot(dag_bank, layout = "fdp", main = "Interdépendances des sujets")
dag_bank1 = dag(~Rev, ~RDR|Age, ~HistP|RDR,
~Fiab|HistP:Age,
~Actif|Rev, ~RevF|Actif,
~Solv|RDR:Fiab:RevF)
dag_bank1
plot(dag_bank1)
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(80,15,5,50,20,30,20,30,50,5,15,80),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(5,95,60,40,95,5),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_Fiab <- cptable(~Fiab|HistP:Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
cp_Solv <- cptable(~Solv|RDR:Fiab:RevF,values = c(0,1),levels=val2)
#cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
#cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(0,1),levels=val2)
cp_Rev
cp_Age
cp_RDR
cp_HistP
cp_Actif
cp_RevF
cp_Fiab
cp_Solv
#ancient : net_list = compileCPT(list(cp_Rev,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
grain_bank = grain(net_list)
plot(grain_bank$dag)
#1
querygrain(grain_bank, nodes=c("Fiab","HistP"), type="conditional")
#2
querygrain(grain_bank, nodes=c("Fiab","Age"), type="conditional")
#3
querygrain(grain_bank, nodes=c("RDR","Age"), type="conditional")
#4
querygrain(grain_bank, nodes=c("HistP","RDR"), type="conditional")
#5
querygrain(grain_bank, nodes=c("Actif","Rev"), type="conditional")
#6
querygrain(grain_bank, nodes=c("RevF","Actif"), type="conditional")
#7
querygrain(grain_bank, nodes=c("Solv","Fiab"), type="conditional")
#8
querygrain(grain_bank, nodes=c("Solv","RevF"), type="conditional")
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
data(marks)
names(marks)
dag_notes = empty.graph(names(marks))
arcs(dag_notes) = matrix(
c("VECT", "MECH",
"ALG", "MECH",
"ALG", "VECT",
"ANL", "ALG",
"STAT", "ALG",
"STAT", "ANL"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
mat_ad = matrix(c(0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 1, 0, 0, 0, 0, 0), nrow = 5,
dimnames = list(names(marks), names(marks)))
dag2_notes = empty.graph(names(marks))
amat(dag2_notes) = mat_ad
dag2 = drop.arc(dag_notes, from = "STAT", to = "ANL")
v_st = list(arcs = vstructs(dag2, arcs = TRUE), lwd = 4, col = "black")
graphviz.plot(dag2, highlight = v_st, layout = "fdp", main = "Interdépendances des sujets")
name_Crit <- c("Age","Fiab","HistP","RDR","Solv","RevF","Rev","Actif")
dag_bank = empty.graph(name_Crit)
arcs(dag_bank) = matrix(
c("Age", "Fiab",
"Age", "RDR",
"RDR", "HistP",
"RDR", "Solv",
"HistP", "Fiab",
"Fiab", "Solv",
"Rev", "Actif",
"Actif", "RevF",
"RevF", "Solv"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
graphviz.plot(dag_bank, layout = "fdp", main = "Interdépendances des sujets")
dag_bank1 = dag(~Rev, ~RDR|Age, ~HistP|RDR,
~Fiab|HistP:Age,
~Actif|Rev, ~RevF|Actif,
~Solv|RDR:Fiab:RevF)
dag_bank1
plot(dag_bank1)
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(80,15,5,50,20,30,20,30,50,5,15,80),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(5,95,60,40,95,5),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
#cp_Fiab <- cptable(~Fiab|HistP:Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
#cp_Solv <- cptable(~Solv|RDR:Fiab:RevF,values = c(0,1),levels=val2)
cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(0,1),levels=val2)
cp_Rev
cp_Age
cp_RDR
cp_HistP
cp_Actif
cp_RevF
cp_Fiab
cp_Solv
#ancient : net_list = compileCPT(list(cp_Rev,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
grain_bank = grain(net_list)
plot(grain_bank$dag)
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
data(marks)
names(marks)
dag_notes = empty.graph(names(marks))
arcs(dag_notes) = matrix(
c("VECT", "MECH",
"ALG", "MECH",
"ALG", "VECT",
"ANL", "ALG",
"STAT", "ALG",
"STAT", "ANL"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
mat_ad = matrix(c(0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 1, 0, 0, 0, 0, 0), nrow = 5,
dimnames = list(names(marks), names(marks)))
dag2_notes = empty.graph(names(marks))
amat(dag2_notes) = mat_ad
dag2 = drop.arc(dag_notes, from = "STAT", to = "ANL")
v_st = list(arcs = vstructs(dag2, arcs = TRUE), lwd = 4, col = "black")
graphviz.plot(dag2, highlight = v_st, layout = "fdp", main = "Interdépendances des sujets")
name_Crit <- c("Age","Fiab","HistP","RDR","Solv","RevF","Rev","Actif")
dag_bank = empty.graph(name_Crit)
arcs(dag_bank) = matrix(
c("Age", "Fiab",
"Age", "RDR",
"RDR", "HistP",
"RDR", "Solv",
"HistP", "Fiab",
"Fiab", "Solv",
"Rev", "Actif",
"Actif", "RevF",
"RevF", "Solv"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
graphviz.plot(dag_bank, layout = "fdp", main = "Interdépendances des sujets")
dag_bank1 = dag(~Rev, ~RDR|Age, ~HistP|RDR,
~Fiab|HistP:Age,
~Actif|Rev, ~RevF|Actif,
~Solv|RDR:Fiab:RevF)
dag_bank1
plot(dag_bank1)
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(80,15,5,50,20,30,20,30,50,5,15,80),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(5,95,60,40,95,5),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
#cp_Fiab <- cptable(~Fiab|HistP:Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
#cp_Solv <- cptable(~Solv|RDR:Fiab:RevF,values = c(0,1),levels=val2)
cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(0,1),levels=val2)
cp_Rev
cp_Age
cp_RDR
cp_HistP
cp_Actif
cp_RevF
cp_Fiab
cp_Solv
#ancient : net_list = compileCPT(list(cp_Rev,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
grain_bank = grain(net_list)
plot(grain_bank$dag)
#1
querygrain(grain_bank, nodes=c("Fiab","HistP"), type="conditional")
#2
querygrain(grain_bank, nodes=c("Fiab","Age"), type="conditional")
#3
querygrain(grain_bank, nodes=c("RDR","Age"), type="conditional")
#4
querygrain(grain_bank, nodes=c("HistP","RDR"), type="conditional")
#5
querygrain(grain_bank, nodes=c("Actif","Rev"), type="conditional")
#6
querygrain(grain_bank, nodes=c("RevF","Actif"), type="conditional")
#7
querygrain(grain_bank, nodes=c("Solv","Fiab"), type="conditional")
#8
querygrain(grain_bank, nodes=c("Solv","RevF"), type="conditional")
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
data(marks)
names(marks)
dag_notes = empty.graph(names(marks))
arcs(dag_notes) = matrix(
c("VECT", "MECH",
"ALG", "MECH",
"ALG", "VECT",
"ANL", "ALG",
"STAT", "ALG",
"STAT", "ANL"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
mat_ad = matrix(c(0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 1, 0, 0, 0, 0, 0), nrow = 5,
dimnames = list(names(marks), names(marks)))
dag2_notes = empty.graph(names(marks))
amat(dag2_notes) = mat_ad
dag2 = drop.arc(dag_notes, from = "STAT", to = "ANL")
v_st = list(arcs = vstructs(dag2, arcs = TRUE), lwd = 4, col = "black")
graphviz.plot(dag2, highlight = v_st, layout = "fdp", main = "Interdépendances des sujets")
name_Crit <- c("Age","Fiab","HistP","RDR","Solv","RevF","Rev","Actif")
dag_bank = empty.graph(name_Crit)
arcs(dag_bank) = matrix(
c("Age", "Fiab",
"Age", "RDR",
"RDR", "HistP",
"RDR", "Solv",
"HistP", "Fiab",
"Fiab", "Solv",
"Rev", "Actif",
"Actif", "RevF",
"RevF", "Solv"),
ncol = 2, byrow = TRUE, dimnames = list(c(), c("from", "to")))
graphviz.plot(dag_bank, layout = "fdp", main = "Interdépendances des sujets")
dag_bank1 = dag(~Rev, ~RDR|Age, ~HistP|RDR,
~Fiab|HistP:Age,
~Actif|Rev, ~RevF|Actif,
~Solv|RDR:Fiab:RevF)
dag_bank1
plot(dag_bank1)
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(80,15,5,50,20,30,20,30,50,5,15,80),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(5,95,60,40,95,5),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
#cp_Fiab <- cptable(~Fiab|HistP:Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
#cp_Solv <- cptable(~Solv|RDR:Fiab:RevF,values = c(0,1),levels=val2)
cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(95,5,60,40,50,50,30,70,70,30,50,50,40,60,5,95),levels=val2)
cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(0,1),levels=val2)
cp_Rev
cp_Age
cp_RDR
cp_HistP
cp_Actif
cp_RevF
cp_Fiab
cp_Solv
#ancient : net_list = compileCPT(list(cp_Rev,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Fiab,cp_Actif,cp_RevF,cp_Solv))
grain_bank = grain(net_list)
plot(grain_bank$dag)
#1
querygrain(grain_bank, nodes=c("Fiab","HistP"), type="conditional")
#2
querygrain(grain_bank, nodes=c("Fiab","Age"), type="conditional")
#3
querygrain(grain_bank, nodes=c("RDR","Age"), type="conditional")
#4
querygrain(grain_bank, nodes=c("HistP","RDR"), type="conditional")
#5
querygrain(grain_bank, nodes=c("Actif","Rev"), type="conditional")
#6
querygrain(grain_bank, nodes=c("RevF","Actif"), type="conditional")
#7
querygrain(grain_bank, nodes=c("Solv","Fiab"), type="conditional")
#8
querygrain(grain_bank, nodes=c("Solv","RevF"), type="conditional")
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
library("stats")
library("miceadds")
library("MASS")
dag_bank = dag(~Rev, ~Age, ~RDR|Age, ~HistP|RDR,
~Fiab|HistP:Age,
~Actif|Rev, ~RevF|Actif,
~Solv|RDR:Fiab:RevF)
plot(dag_bank)
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
library("stats")
library("miceadds")
library("MASS")
#1
querygrain(grain_bank, nodes=c("Fiab","HistP"), type="conditional")
#2
querygrain(grain_bank, nodes=c("Fiab","Age"), type="conditional")
#3
querygrain(grain_bank, nodes=c("RDR","Age"), type="conditional")
#4
querygrain(grain_bank, nodes=c("HistP","RDR"), type="conditional")
#5
querygrain(grain_bank, nodes=c("Actif","Rev"), type="conditional")
#6
querygrain(grain_bank, nodes=c("RevF","Actif"), type="conditional")
#7
querygrain(grain_bank, nodes=c("Solv","Fiab"), type="conditional")
#8
querygrain(grain_bank, nodes=c("Solv","RevF"), type="conditional")
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
library("stats")
library("miceadds")
library("MASS")
print(querygrain(grain_bank, nodes=c("RevF","Solv"), type="conditional"))
library("gRain")
library("gRbase")
library("Rgraphviz")
library("ggm")
library("bnlearn")
library("stats")
library("miceadds")
library("MASS")
dag_bank = dag(~Rev, ~Age, ~RDR|Age, ~HistP|RDR,
~Fiab|HistP:Age,
~Actif|Rev, ~RevF|Actif,
~Solv|RDR:Fiab:RevF)
plot(dag_bank)
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
val4 = c("Non Solvable","Solvable")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(70,20,10,50,20,30,20,30,50,10,20,70),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(45,55,50,50,55,45),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(80,20,60,40,40,60,20,80,80,20,60,40,40,60,20,80),levels=val2)
cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(90,10,80,20,70,30,60,40,50,50,40,60,30,70,20,80,10,90,80,10,80,20,70,30,60,40,50,50,40,60,30,70,20,80,10,90),levels=val4)
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Actif,cp_RevF,cp_Fiab,cp_Solv))
grain_bank = grain(net_list)
print(querygrain(grain_bank, nodes=c("HistP","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","RDR"), type="conditional"))
print(querygrain(grain_bank, nodes=c("RDR","HistP"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Rev","Actif"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Actif","RevF"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Fiab","Solv"), type="conditional"))
print(querygrain(grain_bank, nodes=c("RevF","Solv"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","RDR"), type="conditional"))
print(querygrain(grain_bank, nodes=c("RDR","HistP"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Rev","Actif"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Actif","RevF"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Fiab","Solv"), type="conditional"))
print(querygrain(grain_bank, nodes=c("RevF","Solv"), type="conditional"))
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
val4 = c("Non Solvable","Solvable")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(70,20,10,50,20,30,20,30,50,10,20,70),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(45,55,50,50,55,45),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(80,20,60,40,40,60,20,80,80,20,60,40,40,60,20,80),levels=val2)
cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(90,10,80,20,70,30,60,40,50,50,40,60,30,70,20,80,10,90,80,10,80,20,70,30,60,40,50,50,40,60,30,70,20,80,10,90),levels=val4)
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Actif,cp_RevF,cp_Fiab,cp_Solv))
grain_bank = grain(net_list)
print(querygrain(grain_bank, nodes=c("HistP","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","RDR"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Rev","Actif"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Actif","RevF"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Fiab","Solv"), type="conditional"))
print(querygrain(grain_bank, nodes=c("RevF","Solv"), type="conditional"))
val0 = c("Faible","Moyen","Élevé") ## valeurs possibles pour chacune des variables
val1 = c("Mauvais","Bon")
val2 = c("Non Fiable","Fiable")
val3 = c("<25","[25:50]","[50:65]","[>65]")
val4 = c("Non Solvable","Solvable")
cp_Rev <- cptable(~Rev,values=c(33,33,33),levels=val0)
cp_Age <- cptable(~Age,values=c(25,25,25,25),levels=val3)
cp_RDR <- cptable(~RDR|Age,values=c(70,20,10,50,20,30,20,30,50,10,20,70),levels=val0)
cp_HistP <- cptable(~HistP|RDR, values = c(45,55,50,50,55,45),levels=val1)
cp_Actif <- cptable(~Actif|Rev,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_RevF <- cptable(~RevF|Actif,values = c(85,10,5,33,33,33,5,10,85),levels=val0)
cp_Fiab <- cptable(~Fiab|HistP+Age,values = c(80,20,60,40,40,60,20,80,80,20,60,40,40,60,20,80),levels=val2)
cp_Solv <- cptable(~Solv|RDR+Fiab+RevF,values = c(90,10,80,20,70,30,60,40,50,50,40,60,30,70,20,80,10,90,80,10,80,20,70,30,60,40,50,50,40,60,30,70,20,80,10,90),levels=val4)
net_list = compileCPT(list(cp_Rev,cp_Age,cp_RDR,cp_HistP,cp_Actif,cp_RevF,cp_Fiab,cp_Solv))
grain_bank = grain(net_list)
print(querygrain(grain_bank, nodes=c("HistP","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","Fiab"), type="conditional"))
print(querygrain(grain_bank, nodes=c("Age","Fiab"), type="conditional"))
